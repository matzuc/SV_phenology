---
title: "Metriche fenologiche"
author: "mz"
format: html
Rendering:
  embed-resources: true
execute:
  warning: false
  message: false
---

## Librerie

```{r}
library(dplyr)
library(tidyr)
library(dtplyr)
library(ggplot2)
library(ggthemes)
library(ggspatial)
library(viridis)
library(raster)
library(stringr)
library(data.table)
library(cluster)
library(PlotSvalbard)
library(lubridate)
```

## Dati 

carico i dati


```{r}

kmeanR13 <- stack(here::here("data", "00.4.9_kmeans_13cl.tif"))
kmeanR20 <- stack(here::here("data", "00.4.9_kmeans_clim_20cl.tif"))

df20 <- as.data.frame(kmeanR20)
df13 <- as.data.frame(kmeanR13)
names(df20) <- "cluster20"
names(df13) <- "cluster13"



out13 <- data.frame(cluster13 = NA, date = NA, ave = NA, sd = NA, n = NA)[0, ]
out20 <- data.frame(cluster20 = NA, date = NA, ave = NA, sd = NA, n = NA)[0, ]

```


# carico i dataset di chl



```{r}
mypath <- "data/daily_coarsened"
w <- matrix(1/9, nrow=3, ncol=3)
smooth_spatial <- function(r) {
  return(focal(r, w=w, na.rm=TRUE))
}




year <- 1998

for(year in 1998:2022) {
files <- list.files(path = here::here(mypath, year), pattern = "\\.nc$", full.names = TRUE)


  s <- stack(files[1])
  
  # Se ci sono altri file, aggiungili al raster stack
  if(length(files) > 1) {
    for(i in 2:length(files)) {
      s <- stack(s, stack(files[i]))
      print(i)
    }
  }	
  	
  	
  s_smoothed <- stack(lapply(1:nlayers(s), function(i) {
  smooth_spatial(s[[i]])
}))
  
  # 3 date temporali
  s_temp_smoothed <- s_smoothed

# Esegui la media mobile temporale 
for(i in 2:(nlayers(s_smoothed)-1)) {
  s_temp_smoothed[[i]] <- (s_smoothed[[i-1]] + s_smoothed[[i]] + s_smoothed[[i+1]]) / 3
}
  
  # 21 giorni
  s_21_smoothed <- s_temp_smoothed
for(i in 11:(nlayers(s)-10)) {
  s_21_smoothed[[i]] <- mean(s[[ (i-10):(i+10) ]], na.rm=TRUE)
}
  
  
  names(s_21_smoothed) <- names(s)
  dout <- as.data.frame(s_21_smoothed)
  rm(s_smoothed)
  rm(s_temp_smoothed)
  rm(s_21_smoothed)
  rm(s)
  gc()
  
  
  
  dout2 <- cbind(dout, df13, df20) 

  
  dl2 <- dout2 |> pivot_longer(cols = 1:(ncol(dout) - 2), names_to = "column", values_to = "Value")  |>
  	mutate(date = as_date(stringr::str_remove(column, "X")))

  
  dl2 <- data.table(dl2)
  

  
  t13 <- dl2 |> group_by(cluster13, date) |> 
	summarise(ave = mean(Value, na.rm = TRUE), 
						sd = sd(Value, na.rm = TRUE),
  						n  = sum(!is.na(Value)))
  
  out13 <- rbind(out13, as.data.frame(t13))
  
  t20 <- dl2 |> group_by(cluster20, date) |>
  	summarise(ave = mean(Value, na.rm = TRUE), 
						sd = sd(Value, na.rm = TRUE),
						# conta osservazioni non NA
						
  						n  = sum(!is.na(Value)))
  
  out20 <- rbind(out20, as.data.frame(t20))
  
  
  write.csv(out13, here::here("out", paste0("00.4.9_kmeans_13cl_ts" , ".csv")))
  write.csv(out20, here::here("out", paste0("00.4.9_kmeans_20cl_ts" , ".csv")))
 
  rm(s_smoothed)
  rm(s_temp_smoothed)
  rm(s_21_smoothed)
  rm(s)
  rm(t13)
  rm(t20)
  rm(dl2)
  rm(dout2)
  rm(dout)
  print(year)
}  
  
  
```



Plotto le curve per cluster

```{r height=18, width=8}


ggplot(out13, aes(date, ave)) +
			 	geom_line() + 
	facet_wrap(~cluster13, ncol = 1, scale = "free_y") +
	theme_few() +
	xlab("") +
	ylab("Chl mg/m3")


ggsave(here::here('out', paste0('00.4.7_long_TREND_13.png')), width = 12, height = 18, dpi = 400)





```


```{r height=18, width=8}


ggplot(out20, aes(date, ave)) +
			 	geom_line() + 
	facet_wrap(~cluster20, ncol = 1, scale = "free_y") +
	theme_few() +
	xlab("") +
	ylab("Chl mg/m3")


ggsave(here::here('out', paste0('00.4.7_long_TREND_20.png')), width = 12, height = 18, dpi = 400)





```


