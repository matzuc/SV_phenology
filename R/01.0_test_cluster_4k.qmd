---
title: "perliminary cluster"
author: "mz"
format: html
editor: source
---

## Libraries

load the packages needed for downloading the data

```{r}


library(dplyr)
library(ncdf4)
library(lubridate)
library(factoextra)
library(purrr)
```

load credentials


```{r}
# read cred file ingoring row names


nc_folder <-   here::here('data/chl_4km_nc')

```

```{r}
# Create a file pattern to match the NetCDF files you want to read
nc_pattern <- "*.nc"


# Find all NetCDF files in the folder that match the pattern
nc_files <- list.files(nc_folder, pattern = nc_pattern, full.names = TRUE)

# Define a function to extract the 'CHL' variable from a single NetCDF file
# Define a function to extract the 'CHL' variable and metadata from a single NetCDF file
extract_chl <- function(nc_file) {
  nc <- nc_open(nc_file)
  chl <- ncvar_get(nc, "CHL")
  time <- ncvar_get(nc, "time")
  lon <- ncvar_get(nc, "longitude")
  lat <- ncvar_get(nc, "latitude")
  nc_close(nc)
  return(list(chl = chl, time = time, lon = lon, lat = lat))
}

# Use lapply() to extract the 'CHL' variable and metadata from all NetCDF files
chl_list <- lapply(nc_files, extract_chl)

# Combine the data frames into a single data frame
chl_data <- bind_rows(lapply(chl_list, function(x) {
  data.frame(
    chl = as.vector(x$chl),
    time = as.POSIXct(x$time, origin = "1970-01-01"),
    lon = as.vector(x$lon),
    lat = as.vector(x$lat),
    file = rep(nc_files, sapply(chl_list, function(y) nrow(y$chl)))
  )
}))

# Use lapply() to extract the 'CHL' variable from all NetCDF files
chl_list <- lapply(nc_files, extract_chl)

# Convert the list of arrays to a list of data frames
chl_list <- lapply(chl_list, function(x) {
  data.frame(chl = as.vector(x))
})

# Combine the data frames into a single data frame
chl_data <- do.call(rbind, chl_list)

# Add a column to the data frame indicating the file that each row of data came from
chl_data$file <- rep(nc_files, sapply(chl_list, nrow))

# Do any further processing on the 'chl_data' here
```

