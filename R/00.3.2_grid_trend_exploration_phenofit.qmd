---
title: "8x8 trends"
author: "mz"
format: html
editor: visual
---

## 8x8 grid

dataset con una preliminare aggregazione spaziale per esplorare i trends

```{r}
library(ggplot2)
library(ggthemes)
library(dplyr)
library(viridis)
library(phenofit)

```

parto con un solo anno

```{r}
# first table
dat <- read.csv(here::here('data/tab_8x8_1998.csv'), sep = ",", dec = ".")

head(dat)

```

attacco gli altri

```{r}

for(i in 1999:2022){
	tdat <- read.csv(here::here('data/', paste0('tab_8x8_', i, '.csv')), sep = ",", dec = ".")
	
	dat <- rbind(dat, tdat)
	rm(tdat)
	
}
```


```{r}
dat <- dat %>% mutate(ddat = lubridate::as_date(date)) %>%
	mutate(lab_lat = round(latitude, 3), lab_lon = round(longitude, 3))%>%
	mutate(year = lubridate::year(ddat), doy = lubridate::yday(ddat))

dat$lab_lat <- factor(round(dat$latitude, 3))
											
dat$lab_lat <- factor(dat$lab_lat, levels = rev(levels(dat$lab_lat)))

```



provo a zoomare su un settore



```{r}

lo1 <-  "19.042"; la1 <-  "76.062"

es1 <- dat %>% filter(lab_lon == lo1, lab_lat == la1, year > 2010) %>%
	mutate(year = lubridate::year(ddat), doy = lubridate::yday(ddat))


ggplot(es1, aes(ddat, CHL)) +
	geom_point(alpha = 0.1, size = 0.6) + 
	#geom_line(alpha = 0.2) + 
	facet_grid(lab_lat ~ lab_lon) +
	theme_few() +
	scale_y_log10() + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
	ggtitle("Chlorophyll a")



```

provo a seguire l'esempio


```{r}
d <- MOD13A1$dt %>% subset(site == "CA-NS6" & date >= "2010-01-01" & date <= "2016-12-31") %>%
    .[, .(date, y = EVI/1e4, DayOfYear, QC = SummaryQA)]
d %<>% mutate(t = getRealDate(date, DayOfYear)) %>%
    cbind(d[, as.list(qc_summary(QC, wmin = 0.2, wmid = 0.5, wmax = 0.8))]) %>%
    .[, .(date, t, y, QC_flag, w)]
head(d)

```

```{r}

lambda         <- 8
nptperyear     <- 365/3
minExtendMonth <- 0.5
maxExtendMonth <- 1
minPercValid   <- 0
wFUN           <- wTSM # wBisquare
wmin           <- 0.2
methods_fine <- c("AG", "Zhang", "Beck", "Elmore", "Gu")
```


```{r}
d2 <- es1
d2$w <- 0.2


INPUT <- check_input(d2$ddat, d2$CHL, d2$w,
    #QC_flag = d$QC_flag,
    nptperyear = nptperyear,
    maxgap = nptperyear / 4,
    wmin = 0.2
)
```

```{r}
brks <- season_mov(INPUT,
    list(FUN = "smooth_wWHIT", wFUN = wFUN,
        maxExtendMonth = 3,
        wmin = wmin, r_min = 0.1
    ))
plot_season(INPUT, brks)
```
```{r}
## 2.4 Curve fitting
fit <- curvefits(INPUT, brks,
    list(
        methods = methods_fine, # ,"klos",, 'Gu'
        wFUN = wFUN,
        iters = 2,
        wmin = wmin,
        # constrain = FALSE,
        nextend = 2,
        maxExtendMonth = maxExtendMonth, minExtendMonth = minExtendMonth,
        minPercValid = minPercValid
    ))




```


```{r}

dfit <- get_fitting(fit)
print(dfit)
# fine curvefitting
g <- plot_curvefits(dfit, brks, title = NULL, cex = 1.5,  angle = 0)
grid::grid.newpage()
grid::grid.draw(g)
```


```{r}

## 2.5 Extract phenology
TRS <- c(0.1, 0.2, 0.5)
l_pheno <- get_pheno(fit, TRS = TRS, IsPlot = FALSE) # %>% map(~melt_list(., "meth"))
print(l_pheno$doy$Beck)
l_pheno <- get_pheno(fit[1:7], method = "Beck", TRS = TRS, IsPlot = TRUE, show.title = T)

```

